steps

1> .gitignore
2> src folder
3> build
4> for pacakge json npm init --y
5> index.html file inside src folder (! press tab)
6> npm add react react-dom
7> npm add -D typescript @types/react @types/react-dom
8> config for typescript complier create tsconfig.json in root folder the code is used
for type checking not code compilation
9> setup entry point in src folder index.tsx App.tsx
10> react code is not understood by browser we need babel to convert react and ts code to json
npm add -D @babel/core @babel/preset-env @babel/preset-react @babel/preset-typescript
11> root of the folder create .babelrc file (a project can transpile modern js feature into a format a browser can understood)
12> create a webpack use of module bundler the code we write across multiple component
bundle by webapck which can refrence by index.html file
install webpack
npm install -D webapck webpack-cli webpack-dev-server html-webpack-plugin
if error getting
npm install webpack webpack-cli --save-dev
npm install webpack webpack-cli webpack-dev-server html-webpack-plugin --save-dev
13> we need babel loader package which allows transpiling js file using babel and webpack
npm add -D babel-loader 
or
npm install @babel/core @babel/preset-env @babel/preset-react babel-loader --save-dev
14> create a folder webpack in root directory 
- create webpack-config.js file
15> add npm script to run app in package json file
"scripts": {
    "start": "webpack serve --config webpack/webpack.config.js --open",
 }
16> npm start run your app
if you are getting error run this command - npm install @babel/plugin-transform-runtime --save-dev
17> for css loader in webpack
npm add -D css-loader style-loader
    {
        test: /\.scss$/,
        use: ['style-loader', 'css-loader'],
      },
      if you are using normal css test: /\.css$/,
18> when you are adding any images in any format make one file name is declarations.d.ts inside the src folder
19> setup webpack for multiple environments
for merge dev and prod webpack
npm add -D webpack-merge
for single env use  "start": "webpack serve --config webpack/webpack.config.js --open",
20> we can define our env var use in the app using new webpack.DefinePlugin
21> run in build command
npm run build
cd build
npx serve
22> React refresh feature (hot module replacement)
https://github.com/pmmmwh/react-refresh-webpack-plugin
npm install -D @pmmmwh/react-refresh-webpack-plugin react-refresh

in package json file
"scripts": {
    "start": "webpack serve --config webpack/webpack.config.js --env env=dev --open",
    "build": "webpack --config webpack/webpack.config.js --env env=prod",
    "test": "echo \"Error: no test specified\" && exit 1"
  },

  remove --open coz
  we added in webpack.dev.js file
  devServer: {
      hot: true,
      open: true,
    },
23> eslint - that catches error when you are typing the code
npm install -D eslint  
additional package to support the code library 
npm install -D eslint-plugin-react eslint-plugin-react-hooks  

and if you are using typescript you to install 2 more packages
npm install -D @typescript-eslint/parser @typescript-eslint/eslint-plugin

24> Add .eslintrc.js file in project root
we can add more rule npm install -D eslint-plugin-import eslint-plugin-jsx-a11y
import plugin support of es6 plus import export syntax and prevent issue for missplelling file path
a11y plugin accessibility statndard in yr app in real time

25> add pacakge.json file
"scripts": {
    "lint": "eslint --fix \"./src/**/*.{js,jsx,ts,tsx,json}\"",
  },

it's asking eslint fix any possible error that it can other wise highilght error in src folder which 
have extension 

26> if lint work install - npm install eslint-plugin-eslint-comments@latest --save-dev
then npm run lint

27> formating code with prettier
npm install -D prettier eslint-config-prettier eslint-plugin-prettier 

28> create one in root project with .prettierrc.js file name
add in package json file

"scripts": {
    "format": "prettier --write \"./src/**/*.{js,jsx,ts,tsx,json,css,scss,md}\"",
  },

ctrl + , and set formatonsave true

29> how to prevent linting error and formating error for being commited to our repsistory
install husky
npm install -D husky@4 lint-staged

after add this piece of code in package.json file

"husky": {
    "hooks": {
      "pre-commit": "lint-staged"
    }
  },
  "lint-staged": {
    "src/**/*.{js,jsx,ts,tsx,json}": [
      "eslint --fix"
    ],
    "src/**/*.{js,jsx,ts,tsx,json,css,scss,md}": [
      "prettier --write"
    ]
  }

